<!--

height 800px에서 1000px로 변경함

-->
<div style="width:60%; height:1000px; float:left;">

	<div style="width:100%; height:30px; border-bottom:1px solid lightgrey;">
                <button id="btn-scene" class="btn btn-default btn btn-icon-text ember-view active" onclick="Shader.select_tab(this)">
                        <span class="d-button-label">Scene</span>
                </button>
                <button id="btn-code" class="btn btn-default btn btn-icon-text ember-view" onclick="Shader.select_tab(this)">
                        <span class="d-button-label">Code</span>
                </button>
                <button id="btn-redo" class="btn btn-default btn btn-icon-text ember-view" style="float:right;" onclick="Shader.undo()">
                        <span class="d-button-label">최초 설정으로 돌리기</span>
                </button>

	</div>
	<div id="tab-scene" class="tab-view" style="width:100%; height:500px; border:1px solid grey; display:block;">
		<div id="scene-view" style="width:100%; height:100%;"></div>
	</div>
	<div id="tab-code" class="tab-view"style="width:100%; height:auto; display:none; border: 1px solid lightgrey; border-top:none;">
		<div id="btnbox-in-code" style="width:100%; height:30px; border-bottom:1px solid lightgrey;">			
                	<button id="btn-vertex" class="btn btn-default btn btn-icon-text ember-view active" style="width:150px;" onclick="TabVertex(true)" value='VERTEX'>
        	                <span class="d-button-label">vertex</span>
	                </button>			
			<button id="btn-fragment" class="btn btn-default btn btn-icon-text ember-view" style="width:150px;" onclick="TabFrag(true)" value='FRAGMENT'>
                        	<span class="d-button-label">fragment</span>
                	</button>
		</div>
		<div id="code-view" class="tab-view-sub" style="width:100%; height:450px; overflow:auto; box-sizing: border-box;"></div>
                <div id="shader-error" style="width:100%; padding:10px 5px; border:1px solid lightgrey; text-align:center; box-sizing:border-box;">
                        <b style="color:red">쉐이더 에러시 에러 출력 부분</b>
                        <p id="code_vert_error"></p>
                        <p id="code_frag_error"></p>
                </div>
	</div>
	<div id="shader-notice" style="width:100%;">
		<div style="padding:5px 10px;">
			<span class="shader-notice-title"><%= @shader.title %></span>
			<span>
				<button class="widget-button btn-flat" aria-label="이 글을 좋아합니다." 
					title="이 글을 좋아합니다." onclick="ShaderUser.open(<%= @shader.user.id %>)">
					<span class="shader-notice-username">by.<%= @shader.user.username%></span>
				</button>
				<% if @nomal_action_display %>
				<button class="widget-button btn-flat toggle-like like no-text btn-icon" aria-label="이 글을 좋아합니다." 
					title="이 글을 좋아합니다." onclick="Shader.like(this)">
					<% if @shader_like %>
						<i class="fa fa-heart liked" aria-hidden="true" ></i>
					<% else %>
						<i class="fa fa-heart-o" aria-hidden="true" ></i>
					<% end %>
				</button>
				<button class="widget-button btn-flat bookmark no-text btn-icon" aria-label=" 즐겨찾기에 추가하려면 클릭하세요." 
					title=" 즐겨찾기에 추가하려면 클릭하세요." onclick="Shader.bookmark(this)">
					<%if @shader_bookmark %>
						<i class="fa fa-bookmark bookmarked" aria-hidden="true"></i>
					<% else %>
						<i class="fa fa-bookmark" aria-hidden="true"></i>
					<% end %>
				</button>
				<% end %>
				<% if @auth_action_display %>
				<button class="widget-button btn-flat edit no-text btn-icon" aria-label="이 글 편집." 
					title="이 글 편집.">
					<%= link_to edit_shader_path(@shader), style: 'color:inherit' do %>
						<i class="fa fa-pencil" aria-hidden="true"></i>
					<% end %>
				</button>
				<button class="widget-button btn-flat delete no-text btn-icon" aria-label="이 글 삭제." 
					title="이 글 삭제." onclick="Shader.destroy_confirm()">
					<i class="fa fa-trash" aria-hidden="true"></i>
				</button>
				<% end %>
			<span>
		</div>
		<div style="padding:5px 10px;">			
			<%= @shader.content %>			
		</div>
	</div>
	<div class="comment-box">
		<% if @nomal_action_display %>
		<div class="comment-write">
			<div id="avatar-div" style="width:50px; margin-right:10px; float:left;">
				<a class="trigger-user-card main-avatar" href="/u/<%= current_user.username %>" data-user-card="<%= current_user.username %>">
					<img alt="" width="45" height="45" src="<%= @current_user_avatar_url %>" title="username" class="avatar">
				</a>
			</div>
			<div id="comment-text">
				<textarea placeholder="comment..." onkeydown="Shader.textarea_resize(this)" onkeyup="Shader.textarea_resize(this)" 
					style="width:80%; resize:none; height:auto; max-height:150px; margin:0px;" ></textarea>
                                <button id="comment-submit" class="btn comment-submit" onclick="ShaderComment.submit()">
   	                             <i class="fa fa-commenting"></i>
                                </button>
			</div>
		</div>
		<% end %>
		
		<div class="comment-list" style="width:97%; height:70%; padding: 5px 10px; overflow-y:auto;">
			<!--댓글 삽입 부분-->
		</div>
	</div>
</div>
<div style="width:35%; height:760px; float:left; padding: 30px 10px 10px 10px;">
        <div id="dat-view"style="width:100%; height:auto; float:right;">
                <!--<img src="/images/K-250.png" style="width:100%; height:100%;"></img>-->
        </div>
</div>

<div class="noshow">
<p id="notice"><%= notice %></p>

<p>
  <strong>Id:</strong>
  <p id="show_id"><%= @shader.id %></p>
</p>

</div>
<script>
	Shader.shader_params.id = <%= @shader.id %>;
</script>

<%= render 'shaders/bktree' %>

<script type="text/javascript">

	$(function(){				
		Shader.onLoading();//로딩창on

		var shader_id = <%= @shader.id.nil? ? false : @shader.id %>;
		var board_state = '<%= @board_state %>';
		console.log(board_state);
		if(shader_id){
			$.ajax({
	                        url:'/shaders/bktree',
				type: 'GET',
                        	data: {
					id: shader_id,
	                        },
               		        success:function(data){
						if(data.error){
							console.log(data.error);
							SetBoardState(StateEnum.ERROR);
						}else{
							Shader.set_shader_params(data);
							SetDBData(data.shader.fbx_text, data.shader.vertex_text,
                		                        data.shader.fragment_text, decodeURI(data.shader.dat_gui_text));
						}

						if(board_state=='show'){	
							SetBoardState(StateEnum.VIEW);
						}else if(board_state=='edit'){
							SetBoardState(StateEnum.MODIFY);
						}
						/*
						Init();
						Animate();
						Shader.offLoading();
						*/
						Shader.shader_render();
						
				}
			});
		}else{
			if(localStorage.is_set=='yes'){
				SetBoardState(StateEnum.QUICK);
				SetDBData(localStorage.fbx, localStorage.vertex, localStorage.fragment, '');
			}else{
      		                SetBoardState(StateEnum.WRITE);
			}
			Shader.shader_render();
		}

		//TODO 댓글 목록 가져오기
		ShaderComment.get_list();
	
	});
</script>
